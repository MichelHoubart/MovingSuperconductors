% This function computes the magnetic flux density generated by a fully 
% penetrated superconducting plate at point P. The calculation is performed by
% subdiving the plates into Nb_Spire square current loops in which a 
% current Kc*(Smaller_dimension/2*Nb_spire)is flowing.
function [Btot,mtot] = B_1Supercond_Surface_JcAnysotropic(Caxis, Surface_Centre, Surface_Dimension, P, Kc, Nb_Spire,AnisotropyFactor)
% Caxis: 1 --> x, 2 --> y, 3 --> z
%%%%%%% !!!! Care, only work for Caxis = 1 && SmallerDim = SurfaceDimension(2) !!!!%%%%%%
if(Caxis == 1)
    Smaller_Dim = Surface_Dimension(2);
    % Other case not implemented
%     if(Surface_Dimension(2)<Surface_Dimension(3))
%         Smaller_Dim = Surface_Dimension(2);
%     else
%         Smaller_Dim = Surface_Dimension(3);
%     end  
elseif(Caxis == 2)
    % Other case not implemented
%     if(Surface_Dimension(1)<Surface_Dimension(3))
%         Smaller_Dim = Surface_Dimension(1);
%     else
%         Smaller_Dim = Surface_Dimension(3);
%     end
elseif(Caxis == 3)
    % Other case not implemented
%     if(Surface_Dimension(1)<Surface_Dimension(2))
%         Smaller_Dim = Surface_Dimension(1);
%     else
%         Smaller_Dim = Surface_Dimension(2);
%     end
end

Btot = [0 0 0];
mtot =0;
for(i = 1:Nb_Spire)
    Lz = Surface_Dimension(3)-...
         i*((Smaller_Dim*AnisotropyFactor)/(Nb_Spire))+...
         (((Smaller_Dim*AnisotropyFactor)/(Nb_Spire))/2);
   Ly = Surface_Dimension(2)-...
        i*(Smaller_Dim/(Nb_Spire))+...
        ((Smaller_Dim/(Nb_Spire))/2);
   Spire_Dimension = [Lz Ly   Lz];
   Spire_Dimension(Caxis) = 0;
   [Btemp mtemp] = B_1_square_spire(Caxis, Surface_Centre,...
                   Spire_Dimension, P, Kc*((Smaller_Dim)/(2*Nb_Spire)));
   Btot = Btot + Btemp;
   mtot = mtot + mtemp; 
   
         
%       % Plot the spires
%       Vertmini = -Lz/2;;
%       Vertmaxi = Lz/2;
%       Horizmini = -Ly/2;
%       Horizmaxi =  Ly/2;
%       
%       plot([Surface_Centre(1)+Horizmaxi Surface_Centre(1)+Horizmaxi],[Surface_Centre(3)+Vertmini Surface_Centre(3)+Vertmaxi],'b');
%       hold on;
%       plot([Surface_Centre(1)+Horizmini Surface_Centre(1)+Horizmaxi],[Surface_Centre(3)+Vertmaxi Surface_Centre(3)+Vertmaxi],'b');
%       plot([Surface_Centre(1)+Horizmini Surface_Centre(1)+Horizmini],[Surface_Centre(3)+Vertmini Surface_Centre(3)+Vertmaxi],'b');
%       plot([Surface_Centre(1)+Horizmini Surface_Centre(1)+Horizmaxi],[Surface_Centre(3)+Vertmini Surface_Centre(3)+Vertmini],'b');
%       plot(Surface_Centre(Horizontal_axis)-Surface_Dimension(Horizontal_axis)/2+k(Horizontal_axis),Surface_Centre(2)-Surface_Dimension(2)/2+k(Vertical_axis),'k.','Markersize',20);
      
end
  % Plot the frame
%    plot([Surface_Centre(1)+Surface_Dimension(2)/2 Surface_Centre(1)+Surface_Dimension(2)/2],[Surface_Centre(3)-Surface_Dimension(3)/2 Surface_Centre(3)+Surface_Dimension(3)/2],'k');
%    plot([Surface_Centre(1)-Surface_Dimension(2)/2 Surface_Centre(1)+Surface_Dimension(2)/2],[Surface_Centre(3)+Surface_Dimension(3)/2 Surface_Centre(3)+Surface_Dimension(3)/2],'k');
%    plot([Surface_Centre(1)-Surface_Dimension(2)/2 Surface_Centre(1)-Surface_Dimension(2)/2],[Surface_Centre(3)-Surface_Dimension(3)/2 Surface_Centre(3)+Surface_Dimension(3)/2],'k');
%    plot([Surface_Centre(1)-Surface_Dimension(2)/2 Surface_Centre(1)+Surface_Dimension(2)/2],[Surface_Centre(3)-Surface_Dimension(3)/2 Surface_Centre(3)-Surface_Dimension(3)/2],'k');

end